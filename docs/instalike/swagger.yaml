basePath: /
definitions:
  users.currentUserOutput:
    properties:
      created:
        type: string
      email:
        type: string
      updated:
        type: string
      userId:
        type: integer
    type: object
  users.loginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  users.loginOutput:
    properties:
      token:
        type: string
    type: object
  users.registerInput:
    properties:
      email:
        type: string
      password:
        minLength: 5
        type: string
    required:
    - email
    - password
    type: object
  utils.ErrorOutput:
    properties:
      errors:
        items:
          $ref: '#/definitions/utils.ErrorResponse'
        type: array
      message:
        type: string
    type: object
  utils.ErrorResponse:
    properties:
      field:
        type: string
      tag:
        type: string
      value:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a instagram-like server (instalike).
  termsOfService: http://swagger.io/terms/
  title: InstaLike API
  version: "2.0"
paths:
  /api/users/login:
    post:
      consumes:
      - application/json
      description: performs user login, returns jwt token and sets http-only cookie.
      parameters:
      - description: The input login struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/users.loginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.loginOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorOutput'
        "401":
          description: Unauthorized
      summary: User login
      tags:
      - auth
  /api/users/me:
    get:
      description: gets currenly logger in user information
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.currentUserOutput'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - Bearer: []
      summary: Current user information
      tags:
      - auth
  /api/users/register:
    post:
      consumes:
      - application/json
      description: registers user.
      parameters:
      - description: The input register struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/users.registerInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorOutput'
        "409":
          description: Conflict
      summary: User register
      tags:
      - auth
schemes:
- http
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
